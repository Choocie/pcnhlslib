/**
Description: Top-level test file for standalone gravnetconv test suite.
Author: Marc Neu
Date: 14.10.2024
*/
#include <iostream>
#include <array>
#include "hls_stream.h"
#include "dut.h"

using std::array;

int main()
{
    bool fail = false;

    int num = 32;
    hls::stream<int> numStream;
    numStream << num;

    hls::stream<array<input_t,F_IN>> inputStream[PAR];
    array<input_t,F_IN> inputStimuli = { 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.10, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16};
    for(int p = 0; p < PAR; p++) {
        for(int ii = 0; ii < II; ii++) {
            if(ii*PAR+p < num)
                inputStream[p] << inputStimuli;
            else {
                array<input_t,F_IN> zeros = {0};
                inputStream[p] << zeros;
            }
        }
    }

    hls::stream<array<coordinate_t,F_C>> coordinateStream[PAR];
    array<coordinate_t,F_C> coordinateStimuli = { 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8};
    for(int p = 0; p < PAR; p++) {
        for(int ii = 0; ii < II; ii++) {
            if(ii*PAR+p < num)
                coordinateStream[p] << coordinateStimuli;
            else {
                array<coordinate_t,F_C> zeros = {0};
                coordinateStream[p] << zeros;
            }
        }
    }

    hls::stream<array<feature_t,F_P>> featureStream[PAR];
    array<feature_t,F_P> featureStimuli = {0.9, 0.10, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16};
    for(int p = 0; p < PAR; p++) {
        for(int ii = 0; ii < II; ii++) {
            if(ii*PAR+p < num)
                featureStream[p] << featureStimuli;
            else {
                array<feature_t,F_P> zeros = {0};
                featureStream[p] << zeros;
            }
        }
    }

    array<float,32*F_OUT> golden = {0.09375,0.195313,0.296875,0.398438,0.5,0.59375,0.695313,0.796875,0.898438,0.09375,0.109375,0.117188,0.125,0.132813,0.148438,0.15625,0.875,0.078125,0.09375,0.101563,0.109375,0.117188,0.132813,0.140625,0.890625,0.0859375,0.101563,0.109375,0.117188,0.125,0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438, 0.09375, 0.195313, 0.296875, 0.398438, 0.5, 0.59375, 0.695313, 0.796875, 0.898438, 0.09375, 0.109375, 0.117188, 0.125, 0.132813, 0.148438, 0.15625, 0.875, 0.078125, 0.09375, 0.101563, 0.109375, 0.117188, 0.132813, 0.140625, 0.890625, 0.0859375, 0.101563, 0.109375, 0.117188, 0.125, 0.140625, 0.148438};

    hls::stream<array<output_t,F_OUT>> outputStream[PAR];

    dut(coordinateStream,featureStream,inputStream,outputStream,numStream);

    for(int ii = 0; ii < II; ii++) {
        for(int p = 0; p < PAR; p++) {
                //if(ii*PAR+p < num) {
                    array<output_t,F_OUT> output;
                    outputStream[p] >> output;
                    for (int i = 0; i < F_OUT; i++) {
                        //std::cout << output[i] << ", ";
                        if(abs(static_cast<float>(output[i]) - static_cast<float>(golden[(ii*PAR+p)*F_OUT+i])) > 1e-2) {
                            fail = true;
                            std::cout << "Got " << output[i] << " but expected " << golden[(ii*PAR+p)*F_OUT+i] << std::endl;
                        }
                    }
                //}
            }
    }

    if(fail) {
        std::cout << "FAIL" << std::endl;
    } else {
        std::cout << "SUCCESS" << std::endl;
    }

    return 0;
}